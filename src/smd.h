//-------------------------------------------------------------------------------------------------
// File : smd.h
// Desc : Salty Renderer Mesh Data.
// Copyright(c) Project Asura. All right reserved.
//-------------------------------------------------------------------------------------------------
#pragma once

//-------------------------------------------------------------------------------------------------
// Includes
//-------------------------------------------------------------------------------------------------
#include <cstdint>
#include <r3d_math.h>


//--------------------------------------------------------------------------------------------------
// Constant Values.
//--------------------------------------------------------------------------------------------------
static const uint32_t SMD_CURRENT_VERSION = 0x00000004;
static const uint32_t SMD_INVALID_ID      = UINT32_MAX;
static const uint8_t  SMD_FILE_TAG[4]     = { 'S', 'M', 'D', '\0' };


///////////////////////////////////////////////////////////////////////////////////////////////////
// SMD_MATERIAL_TYPE
///////////////////////////////////////////////////////////////////////////////////////////////////
enum SMD_MATERIAL_TYPE
{
    SMD_MATERIAL_TYPE_LAMBERT = 0,      //!< Lambert
    SMD_MATERIAL_TYPE_MIRROR,           //!< Perfect Specular
    SMD_MATERIAL_TYPE_REFRACT,          //!< Dielectric
    SMD_MATERIAL_TYPE_PHONG,            //!< Phong
};

///////////////////////////////////////////////////////////////////////////////////////////////////
// SMD_FILE_HEADER structure
///////////////////////////////////////////////////////////////////////////////////////////////////
struct SMD_FILE_HEADER
{
    uint8_t      Magic[ 4 ];         //!< ファイルマジック "SMD0"です.
    uint32_t     Version;            //!< ファイルバージョンです.
    uint32_t     VertexCount;        //!< 頂点データ数です.
    uint32_t     TextureCount;       //!< テクスチャ数です.
    uint32_t     MaterialCount;      //!< マテリアル数です.
    uint32_t     TriangleCount;      //!< 三角形数です.
};

///////////////////////////////////////////////////////////////////////////////////////////////////
// SMD_VERTEX structure
///////////////////////////////////////////////////////////////////////////////////////////////////
struct SMD_VERTEX
{
    Vector3     Position;
    Vector3     Normal;
    Vector2     Texcoord;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
// SMD_TRIANGLE structure
///////////////////////////////////////////////////////////////////////////////////////////////////
struct SMD_TRIANGLE
{
    uint32_t    VertexOffset;   //!< 頂点オフセット.
    uint32_t    MaterialId;     //!< マテリアルインデックスです.
};

///////////////////////////////////////////////////////////////////////////////////////////////////
// SMD_MATERIAL structure
///////////////////////////////////////////////////////////////////////////////////////////////////
struct SMD_MATERIAL
{
    SMD_MATERIAL_TYPE Type;
    Vector3           Color;
    Vector3           Emissive;
    float             Ior;
    float             Shininess;
    uint32_t          ColorMap;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
// SMD_TEXTURE structure
///////////////////////////////////////////////////////////////////////////////////////////////////
struct SMD_TEXTURE
{
    char Path[ 256 ];    //!< ファイル名です.
};


/* 
  SMD_DATA は下記の順番で格納.

  SMD_FILE_HEADER
  SMD_VERTEX[]
  SMD_TEXTURE[]
  SMD_MATERIAL[]
  SMD_TRIANGLE[]
*/